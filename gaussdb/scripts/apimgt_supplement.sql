DROP TABLE IF EXISTS AM_ENV;
DROP SEQUENCE IF EXISTS AM_ENV_SEQ;
CREATE SEQUENCE AM_ENV_SEQ;
CREATE TABLE AM_ENV (
    SEQUENCE INTEGER DEFAULT NEXTVAL('AM_ENV_SEQ'),
    NAME VARCHAR (256) NOT NULL,
    VALUE VARCHAR (256),
    ORIGINAL_VALUE VARCHAR (256),
    READONLY SMALLINT  DEFAULT 0,
    PRIMARY KEY (SEQUENCE)
);

DROP TABLE IF EXISTS AM_APP_QUOTA;
CREATE TABLE AM_APP_QUOTA (
    APPLICATION_ID INTEGER,
    TEST_PERIOD BIGINT,
    TEST_QUOTA INTEGER,
    PROD_PERIOD BIGINT,
    PROD_QUOTA INTEGER,
    AUTH_PERIOD INTEGER,
    AUTH_QUOTA INTEGER,
    ORIGINAL_TEST_QUOTA INTEGER,
    ORIGINAL_PROD_QUOTA INTEGER,
    FOREIGN KEY (APPLICATION_ID) REFERENCES AM_APPLICATION(APPLICATION_ID)
);

DROP TABLE IF EXISTS AM_API_QUOTA;
CREATE TABLE AM_API_QUOTA (
    API_ID INTEGER,
    PERIOD INTEGER,
    QUOTA INTEGER,
    ORIGINAL_QUOTA INTEGER,
    FOREIGN KEY (API_ID) REFERENCES AM_API(API_ID)
);

DROP TABLE IF EXISTS AM_API_CATALOG;
CREATE SEQUENCE AM_API_CATALOG_SEQUENCE START WITH 1 INCREMENT BY 1 ;
CREATE TABLE IF NOT EXISTS AM_API_CATALOG (
    CATALOG_ID INTEGER DEFAULT nextval('am_api_catalog_sequence'),
    API_ID INTEGER,
    API_CATALOG VARCHAR(50),
    FOREIGN KEY(API_ID) REFERENCES AM_API(API_ID) ON UPDATE CASCADE ON DELETE RESTRICT,
    PRIMARY KEY (CATALOG_ID)
);

DROP TABLE IF EXISTS AM_INVOKE_STATISTICS;
CREATE TABLE IF NOT EXISTS AM_INVOKE_STATISTICS (
    TIME_CREATED TIMESTAMP,
    CONSUMER_KEY VARCHAR(255),
    APP_NAME VARCHAR(255),
    API_ID INTEGER,
    HTTP_METHOD VARCHAR(20),
    CONTEXT VARCHAR(256),
    API_NAME VARCHAR(64),
    API_VERSION VARCHAR(64),
    INVOKE_COUNT INTEGER,
    SUCCESS_COUNT INTEGER,
    FAIL_COUNT INTEGER,
    MAX_DELAY INTEGER,
    MIN_DELAY INTEGER,
    AVERAGE_DELAY INTEGER
);

CREATE INDEX IDX_INVOKE_STATISTICS ON AM_INVOKE_STATISTICS (TIME_CREATED);

DROP TABLE IF EXISTS AM_STATISTICS_UPLOAD_INFO;
CREATE TABLE IF NOT EXISTS AM_STATISTICS_UPLOAD_INFO (
    UPLOAD_TIME VARCHAR(20)
);

DROP TABLE IF EXISTS AM_API_CONTENT;
CREATE TABLE AM_API_CONTENT(
    ID          SERIAL,
    NAME        VARCHAR(50) PRIMARY KEY,
    CONTENT     BLOB,
    TYPE        VARCHAR(20),
    VERSION     VARCHAR(8),
    LAST_UPDATE BIGINT 
);

DROP TABLE IF EXISTS AM_API_NODE;
CREATE TABLE AM_API_NODE(
    ID          SERIAL,
    NAME        VARCHAR(50) PRIMARY KEY,
    STATUS      VARCHAR(10),
    LAST_UPDATE BIGINT
);

commit;
